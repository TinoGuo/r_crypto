name: CI check

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  # Set up Flutter for all other tasks.
  setup:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        include:
#          - os: ubuntu-latest
#            flutter_path: /opt/hostedtoolcache/flutter
#          - os: macos-10.15
#            flutter_path: /Users/runner/hostedtoolcache/flutter
#          - os: macos-11.0
#            flutter_path: /Users/runner/hostedtoolcache/flutter
          - os: macos-latest
            flutter_path: /Users/runner/hostedtoolcache/flutter
          - os: windows-latest
            flutter_path: C:\Users\runneradmin\hostedtoolcache\flutter
      fail-fast: false

    steps:
      - uses: actions/checkout@v1
      - name: Cache Flutter dependencies
        uses: actions/cache@v1
        with:
          path: ${{ matrix.flutter_path }}
          key: ${{ matrix.os }}-flutter
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'

  build-rust-and-test:
    runs-on: ${{ matrix.os }}
    needs: setup

    strategy:
      matrix:
        os: [macos-latest]
        include:
          #          - os: ubuntu-latest
          #            flutter_path: /opt/hostedtoolcache/flutter
#          - os: macos-10.15
#            flutter_path: /Users/runner/hostedtoolcache/flutter
#          - os: macos-11.0
#            flutter_path: /Users/runner/hostedtoolcache/flutter
          - os: macos-latest
            flutter_path: /Users/runner/hostedtoolcache/flutter
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
    - name: install mingw-w64
      run: |
        brew install mingw-w64
    - name: build and test rust
      run: |
        make init
        make test
        make all
      working-directory: rust
    - name: upload rust artifact
      uses: actions/upload-artifact@v2
      with:
        name: crypto-target
        path: |
          rust/target/aarch64-apple-ios/release/librcrypto.a
          rust/target/aarch64-linux-android/release/librcrypto.so
          rust/target/armv7-linux-androideabi/release/librcrypto.so
          rust/target/i686-linux-android/release/librcrypto.so
          rust/target/universal/release/librcrypto.a
          rust/target/x86_64-apple-darwin/release/librcrypto.dylib
          rust/target/x86_64-apple-ios/release/librcrypto.a
          rust/target/x86_64-linux-android/release/librcrypto.so
          rust/target/x86_64-pc-windows-gnu/release/rcrypto.dll

  publish-artifacts:
    runs-on: ubuntu-latest
    needs: build-rust-and-test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: download rust target
        uses: actions/download-artifact@v2
        with:
          name: crypto-target
          path: rust/target
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: rust/target/x86_64-pc-windows-gnu/release/rcrypto.dll
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  bench-rust:
    runs-on: ${{ matrix.os }}
    needs: build-rust-and-test

    strategy:
      matrix:
        os: [macos-latest]
        include:
          #          - os: ubuntu-latest
          #            flutter_path: /opt/hostedtoolcache/flutter
#          - os: macos-10.15
#            flutter_path: /Users/runner/hostedtoolcache/flutter
#          - os: macos-11.0
#            flutter_path: /Users/runner/hostedtoolcache/flutter
          - os: macos-latest
            flutter_path: /Users/runner/hostedtoolcache/flutter
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
    - if: startsWith(github.ref, 'refs/tags/')
      name: bench crypto
      run: cargo bench --verbose
      working-directory: rust

  build-flutter-and-test:
    runs-on: ${{ matrix.os }}
    needs: build-rust-and-test

    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        include:
#          - os: ubuntu-latest
#            flutter_path: /opt/hostedtoolcache/flutter
#          - os: macos-10.15
#            flutter_path: /Users/runner/hostedtoolcache/flutter
#          - os: macos-11.0
#            flutter_path: /Users/runner/hostedtoolcache/flutter
          - os: macos-latest
            flutter_path: /Users/runner/hostedtoolcache/flutter
          - os: windows-latest
            flutter_path: C:\Users\runneradmin\hostedtoolcache\flutter
      fail-fast: false

    steps:
    - uses: actions/checkout@v2 
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - name: Cache Flutter
      id: cache-flutter
      uses: actions/cache@v2
      with:
        path: ${{ matrix.flutter_path }}
        key: ${{ matrix.os }}-flutter
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable'
    - name: enabled exp platform
      run: |
        flutter config --enable-windows-desktop
        flutter config --enable-macos-desktop
    - run: flutter pub get
    # Analyze our Dart code
    - run: flutter analyze
    - name: download rust target
      uses: actions/download-artifact@v2
      with:
        name: crypto-target
        path: rust/target
    # Run our tests
    - run: flutter test -v

    # Build all example
    - name: build android artifact
      run: flutter build aar --no-profile --no-release -v

    - name: build android example
      working-directory: ./example
      run: flutter build appbundle --target-platform android-arm,android-arm64,android-x64 -v

    - if: runner.os == 'macOS'
      name: build ios example
      working-directory: ./example
      run: flutter build ios --release --no-codesign -v

    - if: runner.os == 'macOS'
      name: build macos example
      working-directory: ./example
      run: flutter build macos --release -v

    - if: runner.os == 'Windows'
      name: build windows example
      working-directory: ./example
      run: flutter build windows --release -v