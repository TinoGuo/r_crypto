name: CI check

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  # Set up Flutter for all other tasks.
  setup:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest]
        include:
#          - os: ubuntu-latest
#            flutter_path: /opt/hostedtoolcache/flutter
          - os: macos-latest
            flutter_path: /Users/runner/hostedtoolcache/flutter
      fail-fast: false

    steps:
      - uses: actions/checkout@v1
      - name: Cache Flutter dependencies
        uses: actions/cache@v1
        with:
          path: ${{ matrix.flutter_path }}
          key: ${{ runner.os }}-flutter
      - uses: subosito/flutter-action@v1
        with:
          channel: 'beta'
      # Cache rust artifact
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

  build-rust-and-test:
    runs-on: ${{ matrix.os }}
    needs: setup

    strategy:
      matrix:
        os: [macos-latest]
        include:
          #          - os: ubuntu-latest
          #            flutter_path: /opt/hostedtoolcache/flutter
          - os: macos-latest
            flutter_path: /Users/runner/hostedtoolcache/flutter
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
#    - name: Cache Rust
#      id: cache-rust
#      uses: actions/cache@v2
#      with:
#        path: |
#          ~/.cargo/registry
#          ~/.cargo/git
#          target
#        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: build and test rust
      run: |
        make init
        make test
        make all
      working-directory: rust
    - name: upload rust artifact
      uses: actions/upload-artifact@v2
      with:
        name: crypto-target
        path: rust/target/*/release/librcrypto.*

  bench-rust:
    runs-on: ${{ matrix.os }}
    needs: build-rust-and-test

    strategy:
      matrix:
        os: [macos-latest]
        include:
          #          - os: ubuntu-latest
          #            flutter_path: /opt/hostedtoolcache/flutter
          - os: macos-latest
            flutter_path: /Users/runner/hostedtoolcache/flutter
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
#    - name: Cache Rust
#      id: cache-rust
#      uses: actions/cache@v2
#      with:
#        path: |
#          ~/.cargo/registry
#          ~/.cargo/git
#          target
#      key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: bench crypto
      run: cargo bench --verbose
      working-directory: rust

  build-flutter-and-test:
    runs-on: ${{ matrix.os }}
    needs: build-rust-and-test

    strategy:
      matrix:
        os: [macos-latest]
        include:
#          - os: ubuntu-latest
#            flutter_path: /opt/hostedtoolcache/flutter
          - os: macos-latest
            flutter_path: /Users/runner/hostedtoolcache/flutter
      fail-fast: false

    steps:
    - uses: actions/checkout@v2 
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - name: Cache Flutter
      id: cache-flutter
      uses: actions/cache@v2
      with:
        path: ${{ matrix.flutter_path }}
        key: ${{ runner.os }}-flutter
    - uses: subosito/flutter-action@v1
      with:
        channel: 'beta'
    - run: flutter pub get
    # Analyze our Dart code
    - run: flutter analyze
    - name: download rust target
      uses: actions/download-artifact@v2
      with:
        name: crypto-target
        path: rust/target
    # Run our tests
    - run: flutter test
    - name: build android artifact
      run: flutter build aar --no-profile --no-release

    - name: build android example
      working-directory: ./example
      run: flutter build appbundle --target-platform android-arm,android-arm64,android-x64

    - if: matrix.os == 'macos-latest'
      name: build ios example
      working-directory: ./example
      run: flutter build ios --release --no-codesign